name: CI


on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  # checks:

  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install Clojure tools.deps
  #       run: |
  #         curl -O https://download.clojure.org/install/linux-install-1.10.1.697.sh
  #         chmod +x linux-install-1.10.1.697.sh
  #         sudo ./linux-install-1.10.1.697.sh
  #         sudo apt-get install rlwrap

      # - name: Install Clojure deps
      #   run: clj -Spath

      # - name: Lint
      #   run: |
      #     make lint-init-ci
      #     docker-compose run lint

      # - name: Fmt
      #   run: make fmt-check-ci

      # - name: Test
      #   run: make test



  deploy:
    # env:
    #   CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
    #   CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # container:
    #  image: clojure:temurin-21-tools-deps-1.12.0.1479-jammy
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Setup Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.11.1.1347'
      - name: Cache All The Things
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.clojure
            ~/.cpcache
          key: ${{ runner.os }}-${{ hashFiles('**/deps.edn') }}

      # - uses: actions/setup-java@v3
      #   with:
      #     distribution: 'temurin'
      #     java-version: '17'
          # server-id: clojars
          # server-username: ${{ secrets.CLOJARS_USERNAME }}
          # server-password: ${{ secrets.CLOJARS_PASSWORD }}
      # - name: Setup Clojure
      #   uses: DeLaGuardo/setup-clojure@master
      #   with:
      #     cli: '1.12.0.1479'
      # - name: Setup Maven settings.xml
      #   run: |
      #     mkdir -p ~/.m2
      #     cat > ~/.m2/settings.xml << EOF
      #     <settings>
      #       <servers>
      #         <server>
      #           <id>clojars</id>
      #           <username>${{ secrets.CLOJARS_USERNAME }}</username>
      #           <password>${{ secrets.CLOJARS_PASSWORD }}</password>
      #         </server>
      #       </servers>
      #     </settings>
      #     EOF
      - name: Deploy Snapshot
        env:
          CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
          CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}
        # run: make slim-snapshot
        run: clojure -T:b deploy
      - name: Publish GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: |
          gh release create "$TAG" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${TAG}" \
              --generate-notes
